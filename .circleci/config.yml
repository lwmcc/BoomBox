# This config was automatically generated from your source code
# Stacks detected: deps:java:.,tool:gradle:
version: 2.1

jobs:
  test-java:
    docker:
      - image: cimg/android:2024.10
    steps:
      - checkout
      - run:
            name: Set Gradle Wrapper Executable
            command: chmod +x ./gradlew
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          command: ./gradlew check
      - run:
          command: ./gradlew androidDependencies
      - run:
          name: Decode google-services.json
          command: |
            echo $GOOGLE_SERVICES_JSON_BASE64 | base64 --decode > app/google-services.json
            
            mkdir -p app/src/debug
            cp app/google-services.json 
            cp app/src/debug/google-services.json
            
            mkdir -p home/circleci/project/app/src/
            cp home/circleci/project/app/src/google-services.json
            
            mkdir -p app/src/debug app/src/flavor/debug app/src/release
                  cp app/google-services.json 
                  cp app/src/debug/google-services.json
                  cp app/google-services.json 
                  cp app/src/release/google-services.json
                  cp app/google-services.json 
                  cp app/src/flavor/debug/google-services.json
      - run:
          name: Check Directory Structure
          command: find . -name "google-services.json"
      - run:
          name: Verify google-services.json File
          command: |
            ls -la app/google-services.json
            ls -la app/src/debug/google-services.json
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.gradle/caches
      - store_artifacts:
          path: build/reports
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
workflows:
  build-and-test:
    jobs:
      - test-java
    # - deploy:
    #     requires:
    #       - test-java
